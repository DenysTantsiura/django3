"""
Django settings for quotes project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path

# https://stackoverflow.com/questions/29830928/django-db-utils-programmingerror-relation-already-exists
# python manage.py makemigrations
# python manage.py migrate
# python manage.py runserver

import environ
# export PYTHONPATH="${PYTHONPATH}:/1prj/django3/"


BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env(BASE_DIR / '.env')


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "quoteapp",
    "users",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'quotes.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'quotes.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
# налаштування роботи з базою даних:

DATABASES = {
    'default': {
        # https://www.alpharithms.com/django-postgresql-install-tutorial-123816/
        # .postgresql_psycopg2 before v.1.9. The old name will continue to be available for backward compatibility.
        'ENGINE': 'django.db.backends.postgresql',  # django.db.backends.postgresql_psycopg2 before v.1.9.
        'NAME': env('DATABASE_NAME'),
        'USER': env('DATABASE_USER'),
        'PASSWORD': env('DATABASE_PASSWORD'),
        'HOST': env('DATABASE_HOST'),
        # 'PORT': env('DATABASE_PORT'),  # ! by defaulf for cloud DB
        'DATABASE': env('DATABASE'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/users/signin'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# backends, який буде використовуватися для надсилання електронної пошти. 
# У цьому випадку використовується backends простого протоколу передачі пошти SMTP
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# ім’я хоста SMTP-сервера, який буде використовуватися для надсилання електронної пошти
EMAIL_HOST = env('EMAIL_HOST')

# порт, який буде використовуватися у разі підключення до SMTP-сервера
EMAIL_PORT = env('EMAIL_PORT')

# прапорець, який вказує, чи використовувати безпеку транспортного рівня TLS у разі підключення до SMTP-сервера. 
# будемо використовувати протокол SSL і ставимо значення False
EMAIL_STARTTLS = False

# прапорець, який вказує, чи варто використовувати SSL у разі підключення до SMTP-сервера
EMAIL_USE_SSL = True

# прапорець, який вказує, чи варто використовувати TLS у разі підключення до SMTP-сервера
EMAIL_USE_TLS = False

# ім’я користувача, що використовується під час аутентифікації на SMTP-сервері
EMAIL_HOST_USER = env('EMAIL_HOST_USER')

# пароль, який буде використовуватися під час аутентифікації на SMTP-сервері
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

# адреса email за замовчуванням, яка буде використовуватися як адреса "from" для всіх листів з застосунку
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
